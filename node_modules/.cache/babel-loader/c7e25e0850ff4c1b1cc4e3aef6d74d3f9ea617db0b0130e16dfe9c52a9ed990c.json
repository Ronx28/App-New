{"ast":null,"code":"var _jsxFileName = \"E:\\\\SEMESTER 7\\\\app-interview-main\\\\app-interview-main\\\\src\\\\components\\\\InterviewPage.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography, Card, Stack, CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark'\n  }\n});\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  padding: theme.spacing(4),\n  gap: theme.spacing(2),\n  width: '100%',\n  maxWidth: '600px',\n  margin: 'auto'\n}));\n_c = StyledCard;\nconst InterviewContainer = styled(Stack)(({\n  theme\n}) => ({\n  minHeight: '100vh',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: theme.spacing(2),\n  background: 'radial-gradient(circle, rgba(25,25,60,1) 0%, rgba(0,0,0,1) 100%)'\n}));\n_c2 = InterviewContainer;\nconst InterviewPage = () => {\n  _s();\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [timer, setTimer] = useState('00:00');\n  const [timerInterval, setTimerInterval] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isVideoReady, setIsVideoReady] = useState(false);\n  const [recordedBlob, setRecordedBlob] = useState(null);\n  const maxRecordingTime = 60; // in seconds\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getMediaStream = async () => {\n      try {\n        const mediaStream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        const videoElement = document.getElementById('videoElement');\n        videoElement.srcObject = mediaStream;\n        videoElement.onloadedmetadata = () => {\n          videoElement.play();\n        };\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access media devices.');\n      }\n    };\n    getMediaStream();\n  }, []);\n  const startRecording = async () => {\n    try {\n      const stream = document.getElementById('videoElement').srcObject;\n      if (!stream) {\n        throw new Error(\"No media stream available.\");\n      }\n      const mimeType = 'video/webm';\n      const recorder = new MediaRecorder(stream, {\n        mimeType\n      });\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n      setIsVideoReady(false);\n      let timeElapsed = 0;\n      const interval = setInterval(() => {\n        timeElapsed++;\n        const minutes = Math.floor(timeElapsed / 60);\n        const seconds = timeElapsed % 60;\n        setTimer(`${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`);\n        if (timeElapsed >= maxRecordingTime) {\n          stopRecording();\n          clearInterval(interval);\n        }\n      }, 1000);\n      setTimerInterval(interval);\n      recorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          setRecordedBlob(e.data);\n          const videoURL = URL.createObjectURL(e.data);\n          const videoElement = document.getElementById('videoElement');\n          videoElement.srcObject = null;\n          videoElement.src = videoURL;\n          videoElement.controls = true;\n          setIsVideoReady(true);\n        }\n      };\n      recorder.start();\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n      alert(\"Error starting the recording.\");\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      setIsRecording(false);\n      setTimer('00:00');\n      if (timerInterval) {\n        clearInterval(timerInterval);\n        setTimerInterval(null);\n      }\n    }\n  };\n  const reloadRecording = () => {\n    if (isRecording) {\n      stopRecording();\n    }\n    setTimer('00:00');\n    setIsRecording(false);\n    setIsVideoReady(false);\n    const videoElement = document.getElementById('videoElement');\n    videoElement.srcObject = null; // Clear the video source\n    videoElement.controls = false; // Disable controls for reload\n    // eslint-disable-next-line no-undef\n    getMediaStream(); // Reload stream\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InterviewContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledCard, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          sx: {\n            textAlign: 'center',\n            color: 'white'\n          },\n          children: \"Interview Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"videoElement\",\n            autoPlay: true,\n            muted: true,\n            style: {\n              width: '100%',\n              height: 'auto',\n              backgroundColor: '#121212'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: startRecording,\n            disabled: isRecording,\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: stopRecording,\n            disabled: !isRecording,\n            children: \"Stop Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: reloadRecording,\n            disabled: isRecording,\n            children: \"Reload Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: 'white',\n            textAlign: 'center'\n          },\n          id: \"timer\",\n          children: timer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'white',\n            mt: 2\n          },\n          id: \"uploadStatus\",\n          children: isVideoReady ? 'Video is ready to be uploaded!' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          onClick: () => navigate('/end'),\n          disabled: !isVideoReady,\n          children: \"End Interview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(InterviewPage, \"rLvNwx5jI85YdzzLhotsVumVLjw=\", false, function () {\n  return [useNavigate];\n});\n_c3 = InterviewPage;\nexport default InterviewPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"InterviewContainer\");\n$RefreshReg$(_c3, \"InterviewPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Box","Button","Typography","Card","Stack","CssBaseline","createTheme","ThemeProvider","styled","jsxDEV","_jsxDEV","darkTheme","palette","mode","StyledCard","theme","display","flexDirection","padding","spacing","gap","width","maxWidth","margin","_c","InterviewContainer","minHeight","justifyContent","alignItems","background","_c2","InterviewPage","_s","mediaRecorder","setMediaRecorder","timer","setTimer","timerInterval","setTimerInterval","isRecording","setIsRecording","isVideoReady","setIsVideoReady","recordedBlob","setRecordedBlob","maxRecordingTime","navigate","getMediaStream","mediaStream","navigator","mediaDevices","getUserMedia","video","audio","videoElement","document","getElementById","srcObject","onloadedmetadata","play","error","console","alert","startRecording","stream","Error","mimeType","recorder","MediaRecorder","timeElapsed","interval","setInterval","minutes","Math","floor","seconds","stopRecording","clearInterval","ondataavailable","e","data","size","videoURL","URL","createObjectURL","src","controls","start","state","stop","reloadRecording","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","sx","textAlign","color","mt","mb","id","autoPlay","muted","style","height","backgroundColor","onClick","disabled","_c3","$RefreshReg$"],"sources":["E:/SEMESTER 7/app-interview-main/app-interview-main/src/components/InterviewPage.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport { Box, Button, Typography, Card, Stack, CssBaseline } from '@mui/material';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n});\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  padding: theme.spacing(4),\r\n  gap: theme.spacing(2),\r\n  width: '100%',\r\n  maxWidth: '600px',\r\n  margin: 'auto',\r\n}));\r\n\r\nconst InterviewContainer = styled(Stack)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2),\r\n  background: 'radial-gradient(circle, rgba(25,25,60,1) 0%, rgba(0,0,0,1) 100%)',\r\n}));\r\n\r\nconst InterviewPage = () => {\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [timer, setTimer] = useState('00:00');\r\n  const [timerInterval, setTimerInterval] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isVideoReady, setIsVideoReady] = useState(false);\r\n  const [recordedBlob, setRecordedBlob] = useState(null); \r\n  const maxRecordingTime = 60; // in seconds\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getMediaStream = async () => {\r\n      try {\r\n        const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n        const videoElement = document.getElementById('videoElement');\r\n        videoElement.srcObject = mediaStream;\r\n        videoElement.onloadedmetadata = () => {\r\n          videoElement.play();\r\n        };\r\n      } catch (error) {\r\n        console.error('Error accessing media devices:', error);\r\n        alert('Unable to access media devices.');\r\n      }\r\n    };\r\n\r\n    getMediaStream();\r\n  }, []);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = document.getElementById('videoElement').srcObject;\r\n      if (!stream) {\r\n        throw new Error(\"No media stream available.\");\r\n      }\r\n\r\n      const mimeType = 'video/webm';\r\n      const recorder = new MediaRecorder(stream, { mimeType });\r\n      setMediaRecorder(recorder);\r\n      setIsRecording(true);\r\n      setIsVideoReady(false);\r\n\r\n      let timeElapsed = 0;\r\n      const interval = setInterval(() => {\r\n        timeElapsed++;\r\n        const minutes = Math.floor(timeElapsed / 60);\r\n        const seconds = timeElapsed % 60;\r\n        setTimer(`${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`);\r\n  \r\n        if (timeElapsed >= maxRecordingTime) {\r\n          stopRecording(); \r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n  \r\n      setTimerInterval(interval);\r\n\r\n      recorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          setRecordedBlob(e.data);\r\n          const videoURL = URL.createObjectURL(e.data);\r\n          const videoElement = document.getElementById('videoElement');\r\n          videoElement.srcObject = null;\r\n          videoElement.src = videoURL;\r\n          videoElement.controls = true;\r\n          setIsVideoReady(true);\r\n        }\r\n      };\r\n\r\n      recorder.start(); \r\n    } catch (error) {\r\n      console.error(\"Error starting recording:\", error);\r\n      alert(\"Error starting the recording.\");\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n      setTimer('00:00');\r\n  \r\n      if (timerInterval) {\r\n        clearInterval(timerInterval);\r\n        setTimerInterval(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reloadRecording = () => {\r\n    if (isRecording) {\r\n      stopRecording();\r\n    }\r\n  \r\n    setTimer('00:00');\r\n    setIsRecording(false);\r\n    setIsVideoReady(false);\r\n  \r\n    const videoElement = document.getElementById('videoElement');\r\n    videoElement.srcObject = null; // Clear the video source\r\n    videoElement.controls = false; // Disable controls for reload\r\n    // eslint-disable-next-line no-undef\r\n    getMediaStream(); // Reload stream\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline />\r\n      <InterviewContainer>\r\n        <StyledCard>\r\n          <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: 'center', color: 'white' }}>\r\n            Interview Session\r\n          </Typography>\r\n          <Box sx={{ mt: 2, mb: 2 }}>\r\n            <video id=\"videoElement\" autoPlay muted style={{ width: '100%', height: 'auto', backgroundColor: '#121212' }} />\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n            <Button variant=\"contained\" onClick={startRecording} disabled={isRecording}>\r\n              Start Recording\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={stopRecording} disabled={!isRecording}>\r\n              Stop Recording\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={reloadRecording} disabled={isRecording}>\r\n              Reload Recording\r\n            </Button>\r\n          </Box>\r\n          <Typography variant=\"h6\" sx={{ color: 'white', textAlign: 'center' }} id=\"timer\">\r\n            {timer}\r\n          </Typography>\r\n          <Typography sx={{ color: 'white', mt: 2 }} id=\"uploadStatus\">\r\n            {isVideoReady ? 'Video is ready to be uploaded!' : ''}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ mt: 2 }}\r\n            onClick={() => navigate('/end')}\r\n            disabled={!isVideoReady}\r\n          >\r\n            End Interview\r\n          </Button>\r\n        </StyledCard>\r\n      </InterviewContainer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default InterviewPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,KAAK,EAAEC,WAAW,QAAQ,eAAe;AACjF,SAASC,WAAW,EAAEC,aAAa,EAAEC,MAAM,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,OAAO,EAAE;IACPC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGN,MAAM,CAACL,IAAI,CAAC,CAAC,CAAC;EAAEY;AAAM,CAAC,MAAM;EAC9CC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,OAAO,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;EACzBC,GAAG,EAAEL,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;EACrBE,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,OAAO;EACjBC,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AAACC,EAAA,GAREV,UAAU;AAUhB,MAAMW,kBAAkB,GAAGjB,MAAM,CAACJ,KAAK,CAAC,CAAC,CAAC;EAAEW;AAAM,CAAC,MAAM;EACvDW,SAAS,EAAE,OAAO;EAClBC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,QAAQ;EACpBV,OAAO,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;EACzBU,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;AAACC,GAAA,GANEL,kBAAkB;AAQxB,MAAMM,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM+C,gBAAgB,GAAG,EAAE,CAAC,CAAC;EAC7B,MAAMC,QAAQ,GAAG/C,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMkD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QAC3F,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;QAC5DF,YAAY,CAACG,SAAS,GAAGT,WAAW;QACpCM,YAAY,CAACI,gBAAgB,GAAG,MAAM;UACpCJ,YAAY,CAACK,IAAI,CAAC,CAAC;QACrB,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDE,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF,CAAC;IAEDf,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,MAAM,GAAGT,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,SAAS;MAChE,IAAI,CAACO,MAAM,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,QAAQ,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACJ,MAAM,EAAE;QAAEE;MAAS,CAAC,CAAC;MACxDhC,gBAAgB,CAACiC,QAAQ,CAAC;MAC1B3B,cAAc,CAAC,IAAI,CAAC;MACpBE,eAAe,CAAC,KAAK,CAAC;MAEtB,IAAI2B,WAAW,GAAG,CAAC;MACnB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCF,WAAW,EAAE;QACb,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,GAAG,EAAE,CAAC;QAC5C,MAAMM,OAAO,GAAGN,WAAW,GAAG,EAAE;QAChCjC,QAAQ,CAAC,GAAGoC,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,OAAO,IAAIG,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,OAAO,EAAE,CAAC;QAErF,IAAIN,WAAW,IAAIxB,gBAAgB,EAAE;UACnC+B,aAAa,CAAC,CAAC;UACfC,aAAa,CAACP,QAAQ,CAAC;QACzB;MACF,CAAC,EAAE,IAAI,CAAC;MAERhC,gBAAgB,CAACgC,QAAQ,CAAC;MAE1BH,QAAQ,CAACW,eAAe,GAAIC,CAAC,IAAK;QAChC,IAAIA,CAAC,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;UACnBrC,eAAe,CAACmC,CAAC,CAACC,IAAI,CAAC;UACvB,MAAME,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACL,CAAC,CAACC,IAAI,CAAC;UAC5C,MAAM1B,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;UAC5DF,YAAY,CAACG,SAAS,GAAG,IAAI;UAC7BH,YAAY,CAAC+B,GAAG,GAAGH,QAAQ;UAC3B5B,YAAY,CAACgC,QAAQ,GAAG,IAAI;UAC5B5C,eAAe,CAAC,IAAI,CAAC;QACvB;MACF,CAAC;MAEDyB,QAAQ,CAACoB,KAAK,CAAC,CAAC;IAClB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI3C,aAAa,IAAIA,aAAa,CAACuD,KAAK,KAAK,WAAW,EAAE;MACxDvD,aAAa,CAACwD,IAAI,CAAC,CAAC;MACpBjD,cAAc,CAAC,KAAK,CAAC;MACrBJ,QAAQ,CAAC,OAAO,CAAC;MAEjB,IAAIC,aAAa,EAAE;QACjBwC,aAAa,CAACxC,aAAa,CAAC;QAC5BC,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF;EACF,CAAC;EAED,MAAMoD,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAInD,WAAW,EAAE;MACfqC,aAAa,CAAC,CAAC;IACjB;IAEAxC,QAAQ,CAAC,OAAO,CAAC;IACjBI,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,KAAK,CAAC;IAEtB,MAAMY,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC5DF,YAAY,CAACG,SAAS,GAAG,IAAI,CAAC,CAAC;IAC/BH,YAAY,CAACgC,QAAQ,GAAG,KAAK,CAAC,CAAC;IAC/B;IACAvC,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACErC,OAAA,CAACH,aAAa;IAACQ,KAAK,EAAEJ,SAAU;IAAAgF,QAAA,gBAC9BjF,OAAA,CAACL,WAAW;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfrF,OAAA,CAACe,kBAAkB;MAAAkE,QAAA,eACjBjF,OAAA,CAACI,UAAU;QAAA6E,QAAA,gBACTjF,OAAA,CAACR,UAAU;UAAC8F,SAAS,EAAC,IAAI;UAACC,OAAO,EAAC,IAAI;UAACC,EAAE,EAAE;YAAEC,SAAS,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAT,QAAA,EAAC;QAErF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbrF,OAAA,CAACV,GAAG;UAACkG,EAAE,EAAE;YAAEG,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAX,QAAA,eACxBjF,OAAA;YAAO6F,EAAE,EAAC,cAAc;YAACC,QAAQ;YAACC,KAAK;YAACC,KAAK,EAAE;cAAErF,KAAK,EAAE,MAAM;cAAEsF,MAAM,EAAE,MAAM;cAAEC,eAAe,EAAE;YAAU;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7G,CAAC,eACNrF,OAAA,CAACV,GAAG;UAACkG,EAAE,EAAE;YAAElF,OAAO,EAAE,MAAM;YAAEW,cAAc,EAAE,eAAe;YAAE2E,EAAE,EAAE;UAAE,CAAE;UAAAX,QAAA,gBACnEjF,OAAA,CAACT,MAAM;YAACgG,OAAO,EAAC,WAAW;YAACY,OAAO,EAAE9C,cAAe;YAAC+C,QAAQ,EAAEvE,WAAY;YAAAoD,QAAA,EAAC;UAE5E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrF,OAAA,CAACT,MAAM;YAACgG,OAAO,EAAC,WAAW;YAACY,OAAO,EAAEjC,aAAc;YAACkC,QAAQ,EAAE,CAACvE,WAAY;YAAAoD,QAAA,EAAC;UAE5E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrF,OAAA,CAACT,MAAM;YAACgG,OAAO,EAAC,WAAW;YAACY,OAAO,EAAEnB,eAAgB;YAACoB,QAAQ,EAAEvE,WAAY;YAAAoD,QAAA,EAAC;UAE7E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrF,OAAA,CAACR,UAAU;UAAC+F,OAAO,EAAC,IAAI;UAACC,EAAE,EAAE;YAAEE,KAAK,EAAE,OAAO;YAAED,SAAS,EAAE;UAAS,CAAE;UAACI,EAAE,EAAC,OAAO;UAAAZ,QAAA,EAC7ExD;QAAK;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACbrF,OAAA,CAACR,UAAU;UAACgG,EAAE,EAAE;YAAEE,KAAK,EAAE,OAAO;YAAEC,EAAE,EAAE;UAAE,CAAE;UAACE,EAAE,EAAC,cAAc;UAAAZ,QAAA,EACzDlD,YAAY,GAAG,gCAAgC,GAAG;QAAE;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACbrF,OAAA,CAACT,MAAM;UACLgG,OAAO,EAAC,WAAW;UACnBC,EAAE,EAAE;YAAEG,EAAE,EAAE;UAAE,CAAE;UACdQ,OAAO,EAAEA,CAAA,KAAM/D,QAAQ,CAAC,MAAM,CAAE;UAChCgE,QAAQ,EAAE,CAACrE,YAAa;UAAAkD,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEpB,CAAC;AAAC/D,EAAA,CAhJID,aAAa;EAAA,QAQAhC,WAAW;AAAA;AAAAgH,GAAA,GARxBhF,aAAa;AAkJnB,eAAeA,aAAa;AAAC,IAAAP,EAAA,EAAAM,GAAA,EAAAiF,GAAA;AAAAC,YAAA,CAAAxF,EAAA;AAAAwF,YAAA,CAAAlF,GAAA;AAAAkF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}